diff --git a/cmd/main.go b/cmd/main.go
index 6974f2a..5a2e372 100644
--- a/cmd/main.go
+++ b/cmd/main.go
@@ -1,50 +1,22 @@
 package main
 
 import (
-	"time"
+	"log"
+	"net/http"
 
-	"github.com/BaneleJerry/auth-service/models"
-	"github.com/go-faker/faker/v4"
-	"gorm.io/driver/sqlite"
-	"gorm.io/gorm"
+	"github.com/BaneleJerry/auth-service/app"
+	"github.com/BaneleJerry/auth-service/database"
+	"github.com/BaneleJerry/auth-service/routes"
 )
 
 func main() {
-	gormDB, err := gorm.Open(sqlite.Open("test.db"), &gorm.Config{})
-	if err != nil {
-		panic("failed to connect database")
-	}
-
-	err = gormDB.AutoMigrate(&models.User{})
-	if err != nil {
-		panic("failed to migrate database")
-	}
-
-	FakerUsers := make([]models.User, 0)
-	for range 10 {
-		Address := faker.GetRealAddress().Address
-		FakerUsers = append(FakerUsers, models.User{
-			Email:        faker.Email(),
-			PasswordHash: faker.Password(),
-			FirstName:    faker.Name(),
-			LastName:     faker.LastName(),
-			PhoneNumber:  faker.Phonenumber(),
-			Address:      &Address,
-			DateOfBirth:  &time.Time{},
-			IsVerified:   false,
-		})
-	}
-
-	for range len(FakerUsers) {
-		println("Generated User: " + FakerUsers[0].Email + " - " + FakerUsers[0].FirstName + " " + FakerUsers[0].LastName)
-	}
-	// gormDB.Create(&FakerUsers)
-
-	// Print Users from the database
-	var users []models.User
-	gormDB.Find(&users)
-	for _, user := range users {
-		println(user.Email + " - " + user.FirstName + " " + user.LastName)
-	}
+
+	db := database.ConnectDB()
+
+	application := app.InitApp(db)
+
+	router := routes.SetupRouter(&application.Controllers)
+
+	log.Fatal(http.ListenAndServe(":8080", router))
 
 }
diff --git a/go.mod b/go.mod
index f5eb764..d2ee213 100644
--- a/go.mod
+++ b/go.mod
@@ -1,11 +1,14 @@
 module github.com/BaneleJerry/auth-service
 
-go 1.23
+go 1.23.0
 
 toolchain go1.23.6
 
 require (
+	github.com/go-chi/chi/v5 v5.2.2
 	github.com/go-faker/faker/v4 v4.6.0
+	github.com/google/uuid v1.6.0
+	golang.org/x/crypto v0.40.0
 	gorm.io/driver/sqlite v1.5.7
 	gorm.io/gorm v1.25.12
 )
@@ -14,5 +17,5 @@ require (
 	github.com/jinzhu/inflection v1.0.0 // indirect
 	github.com/jinzhu/now v1.1.5 // indirect
 	github.com/mattn/go-sqlite3 v1.14.24 // indirect
-	golang.org/x/text v0.22.0 // indirect
-)
\ No newline at end of file
+	golang.org/x/text v0.27.0 // indirect
+)
diff --git a/go.sum b/go.sum
index 2d5e90f..a151d63 100644
--- a/go.sum
+++ b/go.sum
@@ -1,13 +1,19 @@
+github.com/go-chi/chi/v5 v5.2.2 h1:CMwsvRVTbXVytCk1Wd72Zy1LAsAh9GxMmSNWLHCG618=
+github.com/go-chi/chi/v5 v5.2.2/go.mod h1:L2yAIGWB3H+phAw1NxKwWM+7eUH/lU8pOMm5hHcoops=
 github.com/go-faker/faker/v4 v4.6.0 h1:6aOPzNptRiDwD14HuAnEtlTa+D1IfFuEHO8+vEFwjTs=
 github.com/go-faker/faker/v4 v4.6.0/go.mod h1:ZmrHuVtTTm2Em9e0Du6CJ9CADaLEzGXW62z1YqFH0m0=
+github.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=
+github.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=
 github.com/jinzhu/inflection v1.0.0 h1:K317FqzuhWc8YvSVlFMCCUb36O/S9MCKRDI7QkRKD/E=
 github.com/jinzhu/inflection v1.0.0/go.mod h1:h+uFLlag+Qp1Va5pdKtLDYj+kHp5pxUVkryuEj+Srlc=
 github.com/jinzhu/now v1.1.5 h1:/o9tlHleP7gOFmsnYNz3RGnqzefHA47wQpKrrdTIwXQ=
 github.com/jinzhu/now v1.1.5/go.mod h1:d3SSVoowX0Lcu0IBviAWJpolVfI5UJVZZ7cO71lE/z8=
 github.com/mattn/go-sqlite3 v1.14.24 h1:tpSp2G2KyMnnQu99ngJ47EIkWVmliIizyZBfPrBWDRM=
 github.com/mattn/go-sqlite3 v1.14.24/go.mod h1:Uh1q+B4BYcTPb+yiD3kU8Ct7aC0hY9fxUwlHK0RXw+Y=
-golang.org/x/text v0.22.0 h1:bofq7m3/HAFvbF51jz3Q9wLg3jkvSPuiZu/pD1XwgtM=
-golang.org/x/text v0.22.0/go.mod h1:YRoo4H8PVmsu+E3Ou7cqLVH8oXWIHVoX0jqUWALQhfY=
+golang.org/x/crypto v0.40.0 h1:r4x+VvoG5Fm+eJcxMaY8CQM7Lb0l1lsmjGBQ6s8BfKM=
+golang.org/x/crypto v0.40.0/go.mod h1:Qr1vMER5WyS2dfPHAlsOj01wgLbsyWtFn/aY+5+ZdxY=
+golang.org/x/text v0.27.0 h1:4fGWRpyh641NLlecmyl4LOe6yDdfaYNrGb2zdfo4JV4=
+golang.org/x/text v0.27.0/go.mod h1:1D28KMCvyooCX9hBiosv5Tz/+YLxj0j7XhWjpSUF7CU=
 gorm.io/driver/sqlite v1.5.7 h1:8NvsrhP0ifM7LX9G4zPB97NwovUakUxc+2V2uuf3Z1I=
 gorm.io/driver/sqlite v1.5.7/go.mod h1:U+J8craQU6Fzkcvu8oLeAQmi50TkwPEhHDEjQZXDah4=
 gorm.io/gorm v1.25.12 h1:I0u8i2hWQItBq1WfE0o2+WuL9+8L21K9e2HHSTE/0f8=
diff --git a/models/User.go b/models/User.go
index 13bc326..872ef79 100644
--- a/models/User.go
+++ b/models/User.go
@@ -1,17 +1,28 @@
 package models
 
-import "time"
+import (
+	"time"
+
+	"github.com/google/uuid"
+	"gorm.io/gorm"
+)
 
 type User struct {
-	ID          uint       `gorm:"primaryKey"`
-	Email       string     `gorm:"unique;not null"`
-	PasswordHash string     `gorm:"not null"`
-	FirstName   string     `gorm:"not null"`
-	LastName    string     `gorm:"not null"`
-	PhoneNumber string     `gorm:"unique"`
-	Address     *string    `gorm:"type:text"`
-	DateOfBirth *time.Time `gorm:"type:date"`
-	IsVerified  bool       `gorm:"not null;default:false"`
-	CreatedAt   time.Time
-	UpdatedAt   time.Time
+	ID           uuid.UUID `gorm:"type:uuid;primaryKey"`
+	Email        string    `gorm:"uniqueIndex;not null"`
+	PasswordHash string    `gorm:"not null"`
+	FirstName    string
+	LastName     string
+	PhoneNumber  string
+	Address      *string
+	DateOfBirth  *time.Time
+	IsVerified   bool
+	CreatedAt    time.Time
+	UpdatedAt    time.Time
+	DeletedAt    gorm.DeletedAt `gorm:"index"`
+}
+
+func (u *User) BeforeCreate(tx *gorm.DB) (err error) {
+	u.ID = uuid.New()
+	return
 }
diff --git a/test.db b/test.db
index 7d490e9..955f369 100644
Binary files a/test.db and b/test.db differ
